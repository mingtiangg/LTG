<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ltgcoin</groupId>
  <artifactId>ltgcoin</artifactId>
  <version>2.4.0</version>
  <name>Burstcoin Reference Software</name>
  <url>https://github.com/burst-apps-team/burstcoin</url>

 <!-- <scm>
    <connection>scm:git:git@github.com:burst-apps-team/burstcoin.git</connection>
    <developerConnection>scm:git:git@github.com:burst-apps-team/burstcoin.git</developerConnection>
    <url>https://github.com/burst-apps-team/burstcoin</url>
  </scm>-->

  <packaging>jar</packaging>

  <properties>
    <bcprov-jdk15on.version>1.61</bcprov-jdk15on.version>
    <!--<burstkit4j.version>v0.10-beta1</burstkit4j.version>-->
    <ehcache.version>3.7.1</ehcache.version>
    <flywaydb.version>5.2.4</flywaydb.version>
    <grpc.version>1.21.0</grpc.version>
    <gson.version>2.8.5</gson.version>
    <h2.version>1.4.199</h2.version>
    <hikaricp.version>3.3.1</hikaricp.version>
    <java.version>1.8</java.version>
    <jetty.version>9.4.35.v20201120</jetty.version>
    <jocl.version>2.0.1</jocl.version>
    <jooq.version>3.11.11</jooq.version>
    <mariadb.version>2.4.1</mariadb.version>
    <owasp.version>1.2.2</owasp.version>
    <slf4j.version>1.7.26</slf4j.version>
    <weupnp.version>0.1.4</weupnp.version>
    <xzing.version>3.4.0</xzing.version>

    <junit-jupiter.version>5.4.2</junit-jupiter.version>
    <junit-platform.version>1.4.2</junit-platform.version>
    <junit-vintage.version>5.4.2</junit-vintage.version>
    <mockito.version>2.28.2</mockito.version>
    <powermock.version>2.0.2</powermock.version>
    <apachehttpclient.version>4.5.8</apachehttpclient.version>
    <jacoco.version>0.8.4</jacoco.version>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <skip.jooq.generation>false</skip.jooq.generation>

    <grpc.source.dir>src/brs/grpc</grpc.source.dir>
  </properties>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>


  <dependencies>

        <dependency>
          <groupId>burstkit</groupId>
          <artifactId>burstkit</artifactId>
          <version>1.0</version>
        </dependency>

<!--    <dependency>
      <groupId>com.github.burst-apps-team</groupId>
      <artifactId>burstkit4j</artifactId>
      <version>${burstkit4j.version}</version>
    </dependency>-->

    <dependency>
      <groupId>org.jocl</groupId>
      <artifactId>jocl</artifactId>
      <version>${jocl.version}</version>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>${bcprov-jdk15on.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-rewrite</artifactId>
      <version>${jetty.version}</version>
    </dependency>


    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <version>${mariadb.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikaricp.version}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>core</artifactId>
      <version>${xzing.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>javase</artifactId>
      <version>${xzing.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty-shaded</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flywaydb.version}</version>
    </dependency>

    <dependency>
      <groupId>org.owasp.encoder</groupId>
      <artifactId>encoder</artifactId>
      <version>${owasp.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${jooq.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>${jooq.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>${jooq.version}</version>
    </dependency>

    <dependency>
      <groupId>org.bitlet</groupId>
      <artifactId>weupnp</artifactId>
      <version>${weupnp.version}</version>
    </dependency>

    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>${ehcache.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${junit-platform.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>${junit-vintage.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>${jacoco.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${apachehttpclient.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>protoc</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.xolstice.maven.plugins</groupId>
            <artifactId>protobuf-maven-plugin</artifactId>
            <version>0.6.1</version>
            <configuration>
              <protoSourceRoot>${grpc.source.dir}</protoSourceRoot>
              <protocArtifact>com.google.protobuf:protoc:3.5.1-1:exe:${os.detected.classifier}</protocArtifact>
              <pluginId>grpc-java</pluginId>
              <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.18.0:exe:${os.detected.classifier}</pluginArtifact>
              <outputDirectory>src/</outputDirectory>
              <clearOutputDirectory>false</clearOutputDirectory>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>compile</goal>
                  <goal>compile-custom</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <resources><resource><directory>resources</directory></resource></resources>
    <testSourceDirectory>test/java</testSourceDirectory>
<!--    <testResources>
      <testResource>
        <directory>${project.basedir}/conf</directory>
      </testResource>
    </testResources>-->

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.2</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.1</version>

        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>brs.BurstLauncher</mainClass>
            </manifest>
          </archive>
        </configuration>

        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>ant-clear</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- clear dist dir -->
                <delete dir="${project.basedir}/dist"/>
                <mkdir dir="${project.basedir}/dist"/>
                <mkdir dir="${project.basedir}/dist/tmp"/>
                <mkdir dir="${project.basedir}/dist/tmp/burst_db"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>ant-zip</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- copy jar -->
                <copy file="${project.basedir}/target/${project.build.finalName}-jar-with-dependencies.jar"
                  tofile="${project.basedir}/dist/tmp/burst.jar"/>

                <!-- copy html dir -->
                <copy todir="${project.basedir}/dist/tmp/html">
                  <fileset dir="${project.basedir}/html">
                  </fileset>
                </copy>
                <!-- copy properties from conf dir -->
                <copy todir="${project.basedir}/dist/tmp/conf">
                  <fileset dir="${project.basedir}/conf">
                    <include name="logging-default.properties"/>
                    <include name="brs-default.properties"/>
                    <include name="brs.properties" />
                    <include name="logging.properties" />
                  </fileset>
                </copy>
                <!-- copy remaining files from root dir -->
                <copy todir="${project.basedir}/dist/tmp">
                  <fileset dir="${project.basedir}">
                    <include name="LTG_Wallet.url"/>
                    <include name="genscoop.cl"/>
                    <include name="init-mysql.sql"/>
                    <include name="LICENSE.txt"/>
                    <include name="README.md"/>
                    <include name="README_refactoring.md"/>
                    <include name="burst.cmd"/>
                    <include name="burst.sh"/>
                  </fileset>
                </copy>

                <!-- workaround to keep org. burst.(sh|cmd) working, if build with compile scripts -->
                <copy file="${project.basedir}/burst.sh"
                      tofile="${project.basedir}/dist/tmp/burst.sh"/>
                <copy file="${project.basedir}/burst.cmd"
                  tofile="${project.basedir}/dist/tmp/burst.cmd"/>
                <!-- create zip file -->
                <zip destfile="${project.basedir}/dist/${project.build.finalName}.zip"
                     basedir="${project.basedir}/dist/tmp"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <doclint>none</doclint>
          <show>private</show>
          <nohelp>true</nohelp>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>

        <executions>
          <execution>
            <id>jooq-codegen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <jdbc>
            <driver>org.mariadb.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/wallet_ltg</url>
            <user>root</user>
            <password>root</password>
          </jdbc>
          <generator>
            <name>org.jooq.codegen.JavaGenerator</name>
            <database>
              <name>org.jooq.meta.mariadb.MariaDBDatabase</name>
              <inputSchema>wallet_ltg</inputSchema>
              <outputSchema>DB</outputSchema>
              <includes>.*</includes>
              <excludes />
              <forcedTypes>
                <forcedType>
                  <name>BOOLEAN</name>
                  <expression>
                    .*\.(.*\.LATEST|AT_STATE\.FREEZE_WHEN_SAME_BALANCE|GOODS\.DELISTED|TRANSACTION\.(HAS_MESSAGE|HAS_ENCRYPTED_MESSAGE|HAS_PUBLIC_KEY_ANNOUNCEMENT|HAS_ENCRYPTTOSELF_MESSAGE)|PURCHASE\.(PENDING|HAS_FEEDBACK_NOTES|HAS_PUBLIC_FEEDBACKS))
                  </expression>
                  <types>.*</types>
                </forcedType>
              </forcedTypes>
            </database>
            <target>
              <packageName>brs.schema</packageName>
              <directory>src</directory>
            </target>
          </generator>
          <skip>${skip.jooq.generation}</skip>
        </configuration>
      </plugin>
    </plugins>

  </build>
</project>
